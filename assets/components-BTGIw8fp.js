import{u as T,r as g,j as n,m as y}from"./vendor-TSQaGVAF.js";import{s as c}from"./admin-Cshsfgaq.js";const G="/RubimathV1.8/assets/forest-DjXLawl4.jpg",K="/RubimathV1.8/assets/logo-DRB2lyZJ.png",J="/RubimathV1.8/assets/icon_murid-BYcXkfNK.PNG",q="/RubimathV1.8/assets/icon_guru-DZoOKZhD.png",F="/RubimathV1.8/assets/icon_wali-sa-vr0rS.png";function de(){const o=T(),[l,e]=g.useState(!1),[a,t]=g.useState(!1),i=()=>{e(!0)},b=I=>{localStorage.setItem("selectedRole",I),o("/login")},h=()=>{t(!1),localStorage.setItem("selectedRole","admin"),o("/login")};return n.jsxs("div",{className:"main-container",style:{backgroundImage:`url(${G})`},children:[n.jsxs("div",{className:"overlay",children:[n.jsx("img",{src:K,alt:"Logo",className:"logo"}),n.jsx("button",{className:"admin-login-button",onClick:()=>t(!0),children:"Admin"}),n.jsxs("main",{className:"content",children:[n.jsx(y.h1,{initial:{opacity:0,y:-20},animate:{opacity:1,y:0},transition:{duration:1},className:"main-title",style:{color:"white"},children:"Siap Jadi Jagoan Matematika?"}),n.jsx(y.h2,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5},className:"subtitle",children:"Ayo Temani Rubi Berhitung!"}),n.jsx(y.button,{initial:{opacity:0,scale:.9},animate:{opacity:1,scale:1},transition:{delay:.5,duration:.5},className:"book-button",onClick:i,children:"MULAI SEKARANG"})]})]}),l&&n.jsx("div",{className:"popup-overlay",children:n.jsxs(y.div,{className:"popup role-selection-popup",initial:{scale:.8,opacity:0},animate:{scale:1,opacity:1},transition:{duration:.3},children:[n.jsx("h2",{children:"Pilih Peran Kamu"}),n.jsxs("div",{className:"role-buttons",children:[n.jsxs("button",{className:"role-button role-siswa",onClick:()=>b("siswa"),children:[n.jsx("div",{className:"role-icon",children:n.jsx("img",{src:J,alt:"Siswa"})}),n.jsx("span",{children:"Siswa"})]}),n.jsxs("button",{className:"role-button role-guru",onClick:()=>b("guru"),children:[n.jsx("div",{className:"role-icon",children:n.jsx("img",{src:q,alt:"Guru"})}),n.jsx("span",{children:"Guru"})]}),n.jsxs("button",{className:"role-button role-ortu",onClick:()=>b("ortu"),children:[n.jsx("div",{className:"role-icon",children:n.jsx("img",{src:F,alt:"Orang Tua"})}),n.jsx("span",{children:"Orang Tua"})]})]}),n.jsx("button",{className:"close-popup-button",onClick:()=>e(!1),children:"Kembali"})]})}),a&&n.jsx("div",{className:"popup-overlay",children:n.jsxs(y.div,{className:"popup admin-confirm-popup",initial:{scale:.8,opacity:0},animate:{scale:1,opacity:1},transition:{duration:.3},children:[n.jsx("h2",{children:"Masuk sebagai Admin"}),n.jsx("p",{children:"Anda akan diarahkan ke halaman login admin."}),n.jsxs("div",{className:"admin-confirm-buttons",children:[n.jsx("button",{className:"confirm-button",onClick:h,children:"Lanjutkan"}),n.jsx("button",{className:"close-popup-button",onClick:()=>t(!1),children:"Batal"})]})]})})]})}const k=[{id_siswa:1,nis:"2023001",nama:"Rudi Hartono",id_kelas:1,tanggal_lahir:"2012-03-14",alamat:"Jl. Cemara No.8",id_role:4},{id_siswa:2,nis:"2023002",nama:"Nisa Kurnia",id_kelas:2,tanggal_lahir:"2012-06-21",alamat:"Jl. Melati No.9",id_role:4},{id_siswa:3,nis:"123131",nama:"Fachri Aditya Rizky",id_kelas:1,alamat:"sdfscds",id_role:4}],w=[{id_guru:1,nuptk:"198401232005011001",nama:"Ahmad Fauzi",no_telp:"081234567890",alamat:"Jl. Pendidikan No.1",id_role:2},{id_guru:2,nuptk:"197905152003021002",nama:"Lilis Kusuma",no_telp:"082134567891",alamat:"Jl. Merdeka No.2",id_role:2}],V={admin:[{username:"budi.setiawan",password:"admin123",type:"superadmin",nama:"Budi Setiawan"},{username:"siti.aminah",password:"pass1234",type:"admin_sekolah",nama:"Siti Aminah"},{username:"dodi.pratama",password:"pass1234",type:"admin_dev",nama:"Dodi Pratama"}]},R=(o,l,e)=>{let a;switch(e){case"siswa":a=k.find(t=>t.nama===o&&t.nis===l);break;case"guru":a=w.find(t=>t.nama===o&&t.nuptk===l);break}if(!a)throw new Error("Invalid credentials");return{user:a,session:null,isOffline:!0}},B=async(o,l)=>{try{if(console.log(`[Database] Mencoba login siswa dengan nama: ${o} dan NIS: ${l}`),!c){console.error("[Database] Supabase client tidak tersedia");const e=k.find(a=>a.nama===o&&a.nis===l);if(!e)throw new Error("Siswa tidak ditemukan (offline mode)");return console.log("[Database] Menggunakan data offline:",e),e}if(typeof c.from!="function")if(console.error("[Database] Metode from tidak tersedia pada supabase client"),c.from&&typeof c.from=="function"){console.log("[Database] Mencoba memperbaiki metode from dengan cara alternatif");try{const e=c.from.bind(c),a=e("siswa");if(a&&typeof a.select=="function")console.log("[Database] Metode from berhasil diperbaiki"),c.from=e;else{console.error("[Database] Metode from tidak dapat diperbaiki");const t=k.find(i=>i.nama===o&&i.nis===l);if(!t)throw new Error("Siswa tidak ditemukan (offline mode)");return console.log("[Database] Menggunakan data offline:",t),t}}catch(e){console.error("[Database] Error saat memperbaiki metode from:",e);const a=k.find(t=>t.nama===o&&t.nis===l);if(!a)throw new Error("Siswa tidak ditemukan (offline mode)");return console.log("[Database] Menggunakan data offline:",a),a}}else{const e=k.find(a=>a.nama===o&&a.nis===l);if(!e)throw new Error("Siswa tidak ditemukan (offline mode)");return console.log("[Database] Menggunakan data offline:",e),e}try{console.log("[Database] Mencoba dengan metode Supabase client");const{data:e,error:a}=await c.from("siswa").select(`
          *,
          kelas (
            id_kelas,
            nama_kelas
          )
        `).eq("nama",o).eq("nis",l);if(console.log("[Database] Hasil query Supabase:",{data:e,error:a}),a)throw console.error("[Database] Error dengan metode Supabase client:",a),a;if(!e||e.length===0)throw console.warn("[Database] Tidak ada data siswa yang ditemukan"),new Error("Siswa tidak ditemukan");return console.log("[Database] Login siswa berhasil dengan data:",e[0]),e[0]}catch(e){console.error("[Database] Error dengan Supabase client, mencoba dengan fetch API:",e);try{const t=`${c.supabaseUrl}/rest/v1/siswa?select=*,kelas(id_kelas,nama_kelas)&nama=eq.${encodeURIComponent(o)}&nis=eq.${encodeURIComponent(l)}`;console.log("[Database] Request URL:",t);const i=await fetch(t,{method:"GET",headers:{apikey:c.supabaseKey,Authorization:`Bearer ${c.supabaseKey}`,"Content-Type":"application/json",Accept:"application/json",Prefer:"return=representation"}});if(!i.ok)throw console.error("[Database] HTTP error:",i.status,i.statusText),new Error(`HTTP error! status: ${i.status}`);const b=await i.json();if(console.log("[Database] Data dari fetch API:",b),!b||b.length===0)throw console.warn("[Database] Tidak ada data siswa yang ditemukan dengan fetch API"),new Error("Siswa tidak ditemukan");return console.log("[Database] Login siswa berhasil dengan fetch API:",b[0]),b[0]}catch(a){console.error("[Database] Fetch API error:",a);const t=k.find(i=>i.nama===o&&i.nis===l);if(!t)throw new Error("Siswa tidak ditemukan (offline mode)");return console.log("[Database] Menggunakan data offline sebagai fallback terakhir:",t),t}}}catch(e){throw console.error("[Database] Login siswa error:",e),e}},H=async(o,l)=>{try{if(console.log(`[Database] Mencoba login guru dengan nama: ${o} dan NUPTK: ${l}`),!c){console.error("[Database] Supabase client tidak tersedia");const e=w.find(a=>a.nama===o&&a.nuptk===l);if(!e)throw new Error("Guru tidak ditemukan (offline mode)");return console.log("[Database] Menggunakan data offline:",e),e}if(typeof c.from!="function")if(console.error("[Database] Metode from tidak tersedia pada supabase client"),c.from&&typeof c.from=="function"){console.log("[Database] Mencoba memperbaiki metode from dengan cara alternatif");try{const e=c.from.bind(c),a=e("guru");if(a&&typeof a.select=="function")console.log("[Database] Metode from berhasil diperbaiki"),c.from=e;else{console.error("[Database] Metode from tidak dapat diperbaiki");const t=w.find(i=>i.nama===o&&i.nuptk===l);if(!t)throw new Error("Guru tidak ditemukan (offline mode)");return console.log("[Database] Menggunakan data offline:",t),t}}catch(e){console.error("[Database] Error saat memperbaiki metode from:",e);const a=w.find(t=>t.nama===o&&t.nuptk===l);if(!a)throw new Error("Guru tidak ditemukan (offline mode)");return console.log("[Database] Menggunakan data offline:",a),a}}else{const e=w.find(a=>a.nama===o&&a.nuptk===l);if(!e)throw new Error("Guru tidak ditemukan (offline mode)");return console.log("[Database] Menggunakan data offline:",e),e}try{console.log("[Database] Mencoba dengan metode Supabase client");const{data:e,error:a}=await c.from("guru").select("*").eq("nama",o).eq("nuptk",l).single();if(a)throw console.error("[Database] Error dengan metode Supabase client:",a),a;if(!e)throw console.warn("[Database] Tidak ada data guru yang ditemukan"),new Error("Guru tidak ditemukan");return console.log("[Database] Login guru berhasil dengan data:",e),e}catch(e){console.error("[Database] Error dengan Supabase client, mencoba dengan fetch API:",e);try{const a=`${c.supabaseUrl}/rest/v1/guru?select=*&nama=eq.${encodeURIComponent(o)}&nuptk=eq.${encodeURIComponent(l)}`;console.log("[Database] Request URL:",a);const t=await fetch(a,{headers:{apikey:c.supabaseKey,Authorization:`Bearer ${c.supabaseKey}`,"Content-Type":"application/json",Accept:"application/json"}});if(!t.ok)throw console.error("[Database] HTTP error:",t.status,t.statusText),new Error(`HTTP error! status: ${t.status}`);const i=await t.json();if(console.log("[Database] Data dari fetch API:",i),!i||i.length===0)throw console.warn("[Database] Tidak ada data guru yang ditemukan dengan fetch API"),new Error("Guru tidak ditemukan");return console.log("[Database] Login guru berhasil dengan fetch API:",i[0]),i[0]}catch(a){console.error("[Database] Fetch API error:",a);const t=w.find(i=>i.nama===o&&i.nuptk===l);if(!t)throw new Error("Guru tidak ditemukan (offline mode)");return console.log("[Database] Menggunakan data offline sebagai fallback terakhir:",t),t}}}catch(e){throw console.error("[Database] Login guru error:",e),e}},z=async(o,l)=>{try{if(console.log(`[Database] Attempting admin login with username: ${o}`),!c)return console.error("[Database] Supabase client not available"),R(o,l,"admin");try{const{data:e,error:a}=await c.from("admin").select("*").eq("nama",o).single();if(a)throw a.code==="42P17"?(console.error("[Database] Supabase RLS policy error (infinite recursion):",a),new Error("Supabase RLS policy error pada tabel 'admin': infinite recursion. Silakan perbaiki policy di dashboard Supabase.")):(console.error("[Database] Error fetching admin:",a),new Error("Invalid credentials"));if(!e)throw console.warn("[Database] No admin found with provided name"),new Error("Invalid credentials");if(e.password!==l)throw console.warn("[Database] Invalid password"),new Error("Invalid credentials");return console.log("[Database] Admin login successful"),{...e,offline:!1}}catch(e){if(e&&e.message&&e.message.includes("infinite recursion"))throw e;return console.error("[Database] Admin login failed:",e),R(o,l,"admin")}}catch(e){throw e&&e.message&&e.message.includes("infinite recursion")||console.error("[Database] Admin login error:",e),e}},W=async(o,l)=>{try{if(console.log(`[Database] Mencoba update avatar siswa dengan ID: ${o} ke avatar: ${l}`),!c)return console.error("[Database] Supabase client tidak tersedia"),console.log("[Database] Fallback ke mode offline untuk update avatar"),{id_siswa:o,avatar:l,offline:!0};if(typeof c.from!="function")if(console.error("[Database] Metode from tidak tersedia pada supabase client"),c.from&&typeof c.from=="function"){console.log("[Database] Mencoba memperbaiki metode from dengan cara alternatif");try{const e=c.from.bind(c),a=e("siswa");if(a&&typeof a.select=="function")console.log("[Database] Metode from berhasil diperbaiki"),c.from=e;else return console.error("[Database] Metode from tidak dapat diperbaiki"),console.log("[Database] Fallback ke mode offline untuk update avatar"),{id_siswa:o,avatar:l,offline:!0}}catch(e){return console.error("[Database] Error saat memperbaiki metode from:",e),console.log("[Database] Fallback ke mode offline untuk update avatar"),{id_siswa:o,avatar:l,offline:!0}}}else return console.log("[Database] Fallback ke mode offline untuk update avatar"),{id_siswa:o,avatar:l,offline:!0};try{console.log("[Database] Mencoba dengan metode Supabase client");const{data:e,error:a}=await c.from("siswa").update({avatar:l}).eq("id_siswa",o).select().single();if(a)throw console.error("[Database] Error dengan metode Supabase client:",a),a;return console.log("[Database] Update avatar berhasil dengan data:",e),e}catch(e){console.error("[Database] Error dengan Supabase client, mencoba dengan fetch API:",e);try{const a=`${c.supabaseUrl}/rest/v1/siswa?id_siswa=eq.${o}`;console.log("[Database] Request URL:",a);const t=await fetch(a,{method:"PATCH",headers:{apikey:c.supabaseKey,Authorization:`Bearer ${c.supabaseKey}`,"Content-Type":"application/json",Prefer:"return=representation"},body:JSON.stringify({avatar:l})});if(!t.ok)throw console.error("[Database] HTTP error:",t.status,t.statusText),new Error(`HTTP error! status: ${t.status}`);const i=await t.json();return console.log("[Database] Data dari fetch API:",i),!i||i.length===0?(console.warn("[Database] Tidak ada data yang dikembalikan dengan fetch API"),{id_siswa:o,avatar:l,offline:!0}):(console.log("[Database] Update avatar berhasil dengan fetch API:",i[0]),i[0])}catch(a){return console.error("[Database] Fetch API error:",a),console.log("[Database] Fallback ke mode offline untuk update avatar setelah semua upaya gagal"),{id_siswa:o,avatar:l,offline:!0}}}}catch(e){return console.error("[Database] Update avatar error:",e),{id_siswa:o,avatar:l,offline:!0}}},X="/RubimathV1.8/assets/anjing--sHHR2RJ.png",Y="/RubimathV1.8/assets/babi-iuUEe_Y4.png",Z="/RubimathV1.8/assets/bebek-yCqPr9No.png",Q="/RubimathV1.8/assets/gurita-BN8Y1DTZ.png",ee="/RubimathV1.8/assets/harimau-DXNXkm5D.png",ae="/RubimathV1.8/assets/kelinci-Db5133_e.png",ne="/RubimathV1.8/assets/kucing-S-jfTbGR.png",oe="/RubimathV1.8/assets/sapi-H4aliFfW.png",te="/RubimathV1.8/assets/serigala-BU2v79sh.png",re="/RubimathV1.8/assets/singa-gYcf82U9.png",se=[{name:"Anjing",src:X},{name:"Babi",src:Y},{name:"Bebek",src:Z},{name:"Gurita",src:Q},{name:"Harimau",src:ee},{name:"Kelinci",src:ae},{name:"Kucing",src:ne},{name:"Sapi",src:oe},{name:"Serigala",src:te},{name:"Singa",src:re}];function fe(){const[o,l]=g.useState(""),[e,a]=g.useState(""),[t,i]=g.useState(""),[b,h]=g.useState(!1),[I,E]=g.useState(!1),[ie,L]=g.useState(null),[u,P]=g.useState(""),[S,d]=g.useState(!1),[A,N]=g.useState(!0),[M,C]=g.useState(0),f=T();g.useEffect(()=>{const s=localStorage.getItem("selectedRole");s?P(s):f("/"),j()},[f]),g.useEffect(()=>{const s=()=>{navigator.onLine?S&&M<3&&j():(d(!0),N(!1))};return window.addEventListener("online",s),window.addEventListener("offline",()=>{d(!0),N(!1)}),s(),()=>{window.removeEventListener("online",s),window.removeEventListener("offline",()=>{d(!0),N(!1)})}},[S,M]);const j=async()=>{try{if(N(!0),!navigator.onLine)return console.log("Browser reports offline"),d(!0),!1;if(!c)return console.error("Supabase client not initialized"),d(!0),!1;try{const{error:s}=await c.from("siswa").select("id_siswa").limit(1);return s?(console.error("Database connection error:",s),d(!0),!1):(d(!1),!0)}catch(s){return console.error("Database test failed:",s),d(!0),!1}}catch(s){return console.error("Connection check error:",s),d(!0),!1}finally{N(!1)}},O=()=>{C(s=>s+1),j()},_=async s=>{if(s.preventDefault(),i(""),h(!0),!u){i("Error: Role tidak terdeteksi"),h(!1);return}try{try{await j()}catch(r){console.error("Error saat memeriksa koneksi:",r),d(!0)}if(S){console.log("Menggunakan mode offline untuk login"),v();return}if(u==="siswa")try{console.log("Mencoba login dengan nama:",o,"dan NIS:",e);const r=await B(o,e);if(!r){console.error("Tidak ada data yang ditemukan untuk kredensial tersebut"),i("Nama atau NIS siswa salah!"),h(!1);return}console.log("Login berhasil dengan user:",r),localStorage.setItem("userData",JSON.stringify(r)),r.offline&&(d(!0),localStorage.setItem("isOfflineMode","true")),E(!0)}catch(r){console.error("Error during siswa login:",r),console.log("Mencoba fallback ke mode offline setelah error"),v()}else if(u==="guru")try{console.log("Mencoba login guru dengan nama:",o,"dan NUPTK:",e);const r=await H(o,e);if(!r){console.error("Tidak ada data guru yang ditemukan untuk kredensial tersebut"),i("Nama atau NUPTK guru salah!"),h(!1);return}console.log("Login guru berhasil dengan user:",r),localStorage.setItem("userData",JSON.stringify(r)),r.offline&&(d(!0),localStorage.setItem("isOfflineMode","true")),D(null,"guru")}catch(r){console.error("Error during guru login:",r),console.log("Mencoba fallback ke mode offline setelah error"),v()}else if(u==="admin")try{console.log("Attempting admin login with username:",o);const r=await z(o,e);if(!r){console.error("No admin data found for given credentials"),i("Username atau password admin salah!"),h(!1);return}console.log("Admin login successful with user:",r);const p={nama:r.nama,tipe_admin:r.tipe_admin,id_admin:r.id_admin,username:o};localStorage.setItem("userData",JSON.stringify(p)),r.offline&&(d(!0),localStorage.setItem("isOfflineMode","true")),D(null,"admin")}catch(r){console.error("Error during admin login:",r),console.log("Attempting fallback to offline mode after error"),v()}}catch(r){console.error("Login error:",r),i("Terjadi kesalahan saat login. Silakan coba lagi atau gunakan mode offline."),h(!1),d(!0),v()}},v=()=>{if(u==="siswa"){const s=k.find(p=>p.nama===o&&p.nis===e);if(!s){i("Nama atau NIS siswa salah!"),h(!1);return}const r={...s,offline:!0};localStorage.setItem("userData",JSON.stringify(r)),localStorage.setItem("isOfflineMode","true"),d(!0),E(!0)}else if(u==="guru"){const s=w.find(p=>p.nama===o&&p.nuptk===e);if(!s){i("Nama atau NUPTK guru salah!"),h(!1);return}const r={...s,offline:!0};localStorage.setItem("userData",JSON.stringify(r)),localStorage.setItem("isOfflineMode","true"),d(!0),D(null,"guru")}else if(u==="admin"){const s=V.admin.find(r=>r.username===o&&r.password===e);if(s){const r={nama:s.nama,tipe_admin:s.type,username:s.username,offline:!0};localStorage.setItem("userData",JSON.stringify(r)),localStorage.setItem("isOfflineMode","true"),d(!0),D(null,"admin")}else i("Username atau password admin salah!"),h(!1)}},U=async s=>{L(s);try{const r=JSON.parse(localStorage.getItem("userData")||"{}");if(r&&r.id_siswa){let p=!0;if(!S)try{const m=await W(r.id_siswa,s.name);console.log("Avatar update attempt result:",m),m&&!m.error&&(m.offline&&(d(!0),localStorage.setItem("isOfflineMode","true")),r.avatar=m.avatar||s.name,p=!1)}catch(m){console.error("Error updating avatar online:",m)}p&&(r.avatar=s.name),localStorage.setItem("userData",JSON.stringify(r))}D(s,"siswa")}catch(r){console.error("Error during avatar selection:",r),D(s,"siswa")}},D=(s,r)=>{switch(localStorage.setItem("isLoggedIn","true"),localStorage.setItem("userRole",r),localStorage.setItem("isOfflineMode",S.toString()),s&&localStorage.setItem("selectedAvatar",JSON.stringify(s)),r){case"siswa":{const m=JSON.parse(localStorage.getItem("userData")||"{}").id_kelas;f(m===1?"/kelas1":m===2?"/kelas2":m===3?"/kelas3":m===4?"/kelas4":m===5?"/kelas5":m===6?"/kelas6":"/main-siswa");break}case"guru":{f("/guru/dashboard");break}case"ortu":{f("/dashboard-ortu");break}case"admin":{f("/admin/dashboard");break}default:f("/")}},$=()=>{localStorage.removeItem("selectedRole"),f("/")},x=(()=>{switch(u){case"siswa":return{title:"Login Siswa",icon:null};case"guru":return{title:"Login Guru",icon:null};case"ortu":return{title:"Login Orang Tua",icon:null};case"admin":return{title:"Login Admin",icon:null};default:return{title:"Login",icon:null}}})();return n.jsxs("div",{className:"login-container",children:[S&&n.jsxs("div",{className:"offline-indicator",children:["Mode Offline - Data login digunakan dari local storage",n.jsx("button",{className:"retry-button",onClick:O,disabled:A,children:A?"Memeriksa...":"Coba Sambung Ulang"})]}),n.jsx("button",{className:`back-button role-${u}`,onClick:$,children:"Kembali"}),n.jsxs("div",{className:`login-box role-${u}`,children:[n.jsx("div",{className:"login-header",children:n.jsx("h2",{children:x.title})}),I?n.jsxs("div",{className:"avatar-selection",children:[n.jsx("h3",{children:"Pilih Avatar Kamu!"}),n.jsx("div",{className:"avatar-grid",children:se.map((s,r)=>n.jsxs(y.div,{className:"avatar-option",onClick:()=>U(s),whileHover:{scale:1.1},whileTap:{scale:.9},children:[n.jsx("img",{src:s.src,alt:s.name}),n.jsx("p",{children:s.name})]},r))})]}):n.jsxs("div",{className:"login-form1",children:[x.icon&&n.jsx("div",{className:"role-icon-container",children:n.jsx("img",{src:x.icon,alt:`Icon ${x.title}`,className:"role-icon-large"})}),n.jsxs("form",{onSubmit:_,children:[n.jsxs("div",{className:"input-group",children:[n.jsx("label",{htmlFor:"username",children:u==="siswa"||u==="guru"?"Nama":u==="admin"?"Email":"Username"}),n.jsx("input",{type:"text",id:"username",value:o,onChange:s=>l(s.target.value),required:!0,autoComplete:u==="siswa"?"given-name":u==="guru"?"name":u==="admin"?"email":"username",placeholder:u==="siswa"||u==="guru"?"Masukkan nama":u==="ortu"?"ortu":"Masukkan email admin"})]}),n.jsxs("div",{className:"input-group",children:[n.jsx("label",{htmlFor:"password",children:u==="siswa"?"Nomor Induk Siswa (NIS)":u==="guru"?"NUPTK":"Password"}),n.jsx("input",{type:u==="siswa"||u==="guru"?"text":"password",id:"password",value:e,onChange:s=>a(s.target.value),required:!0,autoComplete:u==="siswa"||u==="guru"?"username":"current-password",placeholder:u==="siswa"?"Masukkan NIS":u==="guru"?"Masukkan NUPTK":u==="ortu"?"ortu123":"Masukkan password"})]}),t&&n.jsx("div",{className:"error-message",children:t}),n.jsx("button",{type:"submit",className:"login-button",disabled:b,children:b?"Memproses...":"Login"})]})]})]})]})}export{fe as L,de as W,K as l};
