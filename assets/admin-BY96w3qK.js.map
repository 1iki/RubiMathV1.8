{"version":3,"file":"admin-BY96w3qK.js","sources":["../../src/config/supabase.js","../../src/pages/admin/AdminRegister.jsx","../../src/pages/admin/DashboardAdmin.jsx"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\r\n\r\n// Supabase konfigurasi\r\nconst supabaseUrl = \"https://pvcqsfrxxncafvvsutvr.supabase.co\";\r\nconst supabaseKey =\r\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB2Y3FzZnJ4eG5jYWZ2dnN1dHZyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDczNDkxOTQsImV4cCI6MjA2MjkyNTE5NH0.cmZYoSG7UUsrUAsyNCsHcUhyIL9OHSelveGXH06Hm64\";\r\n\r\n// Status koneksi global\r\nlet connectionStatus = {\r\n  isOnline: true, // Set default to true\r\n  lastChecked: null,\r\n  retryCount: 0,\r\n  maxRetries: 3,\r\n};\r\n\r\n// Fungsi untuk membuat dummy client\r\nconst createDummyClient = () => {\r\n  console.warn(\"[Supabase] Membuat dummy client\");\r\n\r\n  // Buat objek dengan struktur yang sama dengan client asli\r\n  return {\r\n    supabaseUrl,\r\n    supabaseKey,\r\n    from: (table) => {\r\n      console.log(`[Supabase Dummy] Mengakses tabel ${table}`);\r\n      return {\r\n        select: (columns) => {\r\n          console.log(\r\n            `[Supabase Dummy] Select ${columns || \"*\"} dari ${table}`\r\n          );\r\n          return {\r\n            eq: (column, value) => {\r\n              console.log(`[Supabase Dummy] Where ${column} = ${value}`);\r\n              return {\r\n                single: () => ({\r\n                  data: null,\r\n                  error: new Error(\"Dummy client\"),\r\n                }),\r\n                data: null,\r\n                error: new Error(\"Dummy client\"),\r\n              };\r\n            },\r\n            limit: (num) => {\r\n              console.log(`[Supabase Dummy] Limit ${num}`);\r\n              return { data: [], error: null };\r\n            },\r\n            single: () => ({ data: null, error: new Error(\"Dummy client\") }),\r\n          };\r\n        },\r\n        update: (data) => {\r\n          console.log(`[Supabase Dummy] Update ${table} dengan`, data);\r\n          return {\r\n            eq: (column, value) => {\r\n              console.log(`[Supabase Dummy] Where ${column} = ${value}`);\r\n              return {\r\n                select: () => ({\r\n                  single: () => ({ data: { ...data, id: value }, error: null }),\r\n                }),\r\n                data: { ...data, id: value },\r\n                error: null,\r\n              };\r\n            },\r\n          };\r\n        },\r\n        insert: (data) => {\r\n          console.log(`[Supabase Dummy] Insert ke ${table}`, data);\r\n          return { data: Array.isArray(data) ? data : [data], error: null };\r\n        },\r\n      };\r\n    },\r\n    auth: {\r\n      getSession: async () => ({ data: { session: null }, error: null }),\r\n      getUser: async () => ({ data: { user: null }, error: null }),\r\n      signOut: async () => ({ error: null }),\r\n      onAuthStateChange: () => ({\r\n        data: { subscription: { unsubscribe: () => {} } },\r\n      }),\r\n    },\r\n    rpc: (func, params) => {\r\n      console.log(`[Supabase Dummy] RPC call ${func} dengan`, params);\r\n      return { data: null, error: null };\r\n    },\r\n    isOnline: () => false,\r\n    testConnection: async () => true, // Dummy selalu terhubung untuk menghindari loop\r\n  };\r\n};\r\n\r\n// Membuat wrapper untuk Supabase client dengan penanganan kesalahan yang lebih baik\r\nconst createSafeClient = () => {\r\n  try {\r\n    console.log(\"[Supabase] Mencoba membuat client...\");\r\n\r\n    // Buat client dasar terlebih dahulu\r\n    const client = createClient(supabaseUrl, supabaseKey, {\r\n      auth: {\r\n        persistSession: true,\r\n        autoRefreshToken: true,\r\n      },\r\n      db: {\r\n        schema: \"public\",\r\n      },\r\n      global: {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      },\r\n      realtime: {\r\n        enabled: true,\r\n      },\r\n    });\r\n\r\n    // Verifikasi bahwa client memiliki metode from\r\n    if (!client) {\r\n      console.error(\"[Supabase] Client tidak berhasil dibuat\");\r\n      return createDummyClient();\r\n    }\r\n\r\n    // Periksa metode from dengan lebih teliti\r\n    if (typeof client.from !== \"function\") {\r\n      console.error(\"[Supabase] Client tidak memiliki metode from yang valid\");\r\n\r\n      // Coba akses from dengan cara lain (kadang terjadi karena perbedaan versi library)\r\n      if (client[\"from\"] && typeof client[\"from\"] === \"function\") {\r\n        console.log(\"[Supabase] Metode from ditemukan dengan cara alternatif\");\r\n        // Buat client baru dengan metode from yang benar\r\n        const fixedClient = {\r\n          ...client,\r\n          from: client[\"from\"].bind(client),\r\n        };\r\n\r\n        // Uji metode from yang diperbaiki\r\n        try {\r\n          const testTable = fixedClient.from(\"siswa\");\r\n          if (testTable && typeof testTable.select === \"function\") {\r\n            console.log(\"[Supabase] Metode from berhasil diperbaiki\");\r\n            // Lanjutkan dengan client yang diperbaiki\r\n            client.from = fixedClient.from;\r\n          } else {\r\n            console.error(\r\n              \"[Supabase] Metode from yang diperbaiki tidak berfungsi\"\r\n            );\r\n            return createDummyClient();\r\n          }\r\n        } catch (fixError) {\r\n          console.error(\r\n            \"[Supabase] Error saat memperbaiki metode from:\",\r\n            fixError\r\n          );\r\n          return createDummyClient();\r\n        }\r\n      } else {\r\n        console.error(\"[Supabase] Metode from tidak ditemukan sama sekali\");\r\n        return createDummyClient();\r\n      }\r\n    }\r\n\r\n    // Uji metode from untuk memastikan berfungsi\r\n    try {\r\n      const testTable = client.from(\"siswa\");\r\n      if (!testTable || typeof testTable.select !== \"function\") {\r\n        console.error(\r\n          \"[Supabase] Metode from tidak mengembalikan objek yang valid\"\r\n        );\r\n        return createDummyClient();\r\n      }\r\n\r\n      // Tambahan: uji metode select dan eq untuk memastikan chain method berfungsi\r\n      const testQuery = testTable.select(\"*\");\r\n      if (!testQuery || typeof testQuery.eq !== \"function\") {\r\n        console.error(\r\n          \"[Supabase] Metode select tidak mengembalikan objek yang valid\"\r\n        );\r\n        return createDummyClient();\r\n      }\r\n\r\n      console.log(\"[Supabase] Semua metode chain berhasil diuji\");\r\n    } catch (fromError) {\r\n      console.error(\"[Supabase] Error saat menguji metode from:\", fromError);\r\n      return createDummyClient();\r\n    }\r\n\r\n    console.log(\r\n      \"[Supabase] Client berhasil dibuat dengan metode from yang valid\"\r\n    );\r\n\r\n    // Menambahkan metode untuk mengecek koneksi\r\n    const enhancedClient = {\r\n      ...client, // Menggunakan semua metode asli dari client\r\n      // Tambahkan URL dan key untuk akses langsung\r\n      supabaseUrl,\r\n      supabaseKey,\r\n      isOnline: () => connectionStatus.isOnline,\r\n\r\n      // Metode untuk mengecek koneksi dan memperbarui status\r\n      checkConnection: async () => {\r\n        try {\r\n          // Gunakan metode testConnection yang lebih aman\r\n          return await enhancedClient.testConnection();\r\n        } catch (error) {\r\n          console.error(\r\n            \"[Supabase] Error saat memeriksa koneksi:\",\r\n            error.message\r\n          );\r\n          connectionStatus = {\r\n            ...connectionStatus,\r\n            isOnline: false,\r\n            lastChecked: Date.now(),\r\n            retryCount: connectionStatus.retryCount + 1,\r\n          };\r\n          return false;\r\n        }\r\n      },\r\n\r\n      // Metode untuk tes koneksi dengan timeout\r\n      testConnection: async (timeout = 3000) => {\r\n        try {\r\n          // Gunakan metode auth.getSession sebagai test yang lebih sederhana dan reliable\r\n          const startTime = Date.now();\r\n\r\n          // Create a promise that rejects after timeout\r\n          const timeoutPromise = new Promise((_, reject) => {\r\n            setTimeout(() => reject(new Error(\"Connection timeout\")), timeout);\r\n          });\r\n\r\n          // Create the actual query promise - gunakan getSession yang lebih reliable\r\n          const sessionPromise = client.auth.getSession();\r\n          // Race the two promises\r\n          await Promise.race([sessionPromise, timeoutPromise]);\r\n\r\n          const responseTime = Date.now() - startTime;\r\n          console.log(`[Supabase] Response time: ${responseTime}ms`);\r\n\r\n          // Update connection status\r\n          connectionStatus = {\r\n            ...connectionStatus,\r\n            isOnline: true,\r\n            lastChecked: Date.now(),\r\n          };\r\n\r\n          return true;\r\n        } catch (error) {\r\n          console.error(\"[Supabase] Connection test failed:\", error.message);\r\n          connectionStatus = {\r\n            ...connectionStatus,\r\n            isOnline: false,\r\n            lastChecked: Date.now(),\r\n          };\r\n          return false;\r\n        }\r\n      },\r\n\r\n      // Retry mechanism for operations\r\n      retryOperation: async (operation, maxRetries = 3, delay = 1000) => {\r\n        let retries = 0;\r\n\r\n        while (retries < maxRetries) {\r\n          try {\r\n            return await operation();\r\n          } catch (error) {\r\n            retries++;\r\n            if (retries >= maxRetries) throw error;\r\n            console.log(\r\n              `[Supabase] Retry ${retries}/${maxRetries} after ${delay}ms`\r\n            );\r\n            await new Promise((resolve) => setTimeout(resolve, delay));\r\n            // Increase delay for next retry (exponential backoff)\r\n            delay *= 2;\r\n          }\r\n        }\r\n      },\r\n\r\n      // PENTING: Pastikan metode from selalu tersedia\r\n      from: function (table) {\r\n        if (typeof client.from === \"function\") {\r\n          return client.from(table);\r\n        } else {\r\n          console.error(\r\n            \"[Supabase] Metode from tidak tersedia, menggunakan dummy\"\r\n          );\r\n          return createDummyClient().from(table);\r\n        }\r\n      },\r\n\r\n      // Tambahkan metode debug untuk melihat fungsi yang tersedia\r\n      debug: () => {\r\n        console.log(\r\n          \"[Supabase] Available methods on client:\",\r\n          Object.keys(client)\r\n        );\r\n        try {\r\n          const testTable = client.from(\"siswa\");\r\n          console.log(\r\n            \"[Supabase] Available methods on from:\",\r\n            Object.keys(testTable)\r\n          );\r\n        } catch (error) {\r\n          console.error(\"[Supabase] Error saat debug metode from:\", error);\r\n        }\r\n        return {\r\n          client,\r\n          connectionStatus,\r\n        };\r\n      },\r\n    };\r\n\r\n    // Periksa koneksi saat inisialisasi\r\n    enhancedClient.checkConnection().catch((err) => {\r\n      console.error(\"[Supabase] Initial connection check failed:\", err);\r\n      connectionStatus.isOnline = false;\r\n    });\r\n\r\n    return enhancedClient;\r\n  } catch (error) {\r\n    console.error(\"[Supabase] Error membuat client:\", error);\r\n    return createDummyClient();\r\n  }\r\n};\r\n\r\n// Buat client Supabase yang aman\r\nconsole.log(\"[Supabase] Memulai inisialisasi client...\");\r\nconst supabase = createSafeClient();\r\n\r\n// Pastikan supabase client selalu tersedia\r\nif (!supabase) {\r\n  console.error(\r\n    \"[Supabase] Failed to initialize client, menggunakan dummy client\"\r\n  );\r\n}\r\n\r\n// Ekspor auth untuk kompatibilitas\r\nexport const auth = supabase\r\n  ? supabase.auth\r\n  : {\r\n      getSession: async () => ({ data: { session: null }, error: null }),\r\n      getUser: async () => ({ data: { user: null }, error: null }),\r\n      signOut: async () => ({ error: null }),\r\n    };\r\n\r\n// Ekspor status koneksi\r\nexport const getConnectionStatus = () => connectionStatus;\r\n\r\n// Fungsi untuk memvalidasi ketersediaan Supabase client\r\nexport const validateSupabaseClient = () => {\r\n  if (!supabase) {\r\n    console.error(\"[Supabase] Client tidak tersedia\");\r\n    return false;\r\n  }\r\n\r\n  if (typeof supabase.from !== \"function\") {\r\n    console.error(\"[Supabase] Metode from tidak tersedia pada client\");\r\n    return false;\r\n  }\r\n\r\n  // Uji metode from untuk memastikan berfungsi\r\n  try {\r\n    const testTable = supabase.from(\"siswa\");\r\n    if (!testTable || typeof testTable.select !== \"function\") {\r\n      console.error(\r\n        \"[Supabase] Metode from tidak mengembalikan objek yang valid\"\r\n      );\r\n      return false;\r\n    }\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"[Supabase] Error saat validasi client:\", error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Ekspor supabase client\r\nexport default supabase;\r\n","import React, { useState } from \"react\";\r\nimport supabase from \"../../config/supabase\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import \"../../login.css\";\r\nimport \"./register.css\";\r\n\r\nconst AdminRegister = () => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    nama: \"\",\r\n    nomorInduk: \"\",\r\n    role: \"4\", // Default role_id untuk siswa\r\n    kelas: \"\",\r\n    noTelp: \"\", // Untuk data guru/wali\r\n    password: \"\", \r\n    tanggalLahir: \"\", // Untuk siswa\r\n    alamat: \"\", // Untuk semua pengguna\r\n    jenisKelamin: \"L\", // Default untuk siswa (L/P)\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState({ text: \"\", type: \"\" });\r\n\r\n  // Mapping role_id ke role name untuk tampilan pesan\r\n  const roleNames = {\r\n    1: \"admin\",\r\n    2: \"guru\",\r\n    3: \"orang tua\",\r\n    4: \"siswa\",\r\n  };\r\n\r\n  // Fungsi untuk mengecek apakah role memerlukan kelas\r\n  const needsClass = (role) => {\r\n    return role === \"2\" || role === \"4\"; // Guru dan siswa memerlukan kelas\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setMessage({ text: \"\", type: \"\" });\r\n\r\n    try {\r\n      // Validasi form\r\n      if (!formData.nama || !formData.nomorInduk) {\r\n        setMessage({ text: \"Nama dan nomor induk harus diisi\", type: \"error\" });\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Untuk role yang memerlukan kelas, kelas harus diisi\r\n      if (needsClass(formData.role) && !formData.kelas) {\r\n        const roleText = formData.role === \"4\" ? \"siswa\" : \"guru\";\r\n        setMessage({ text: `Kelas harus diisi untuk ${roleText}`, type: \"error\" });\r\n        setLoading(false);\r\n        return;\r\n      }\r\n        // Untuk siswa, tanggal lahir dan jenis kelamin harus diisi\r\n      if (formData.role === \"4\" && (!formData.tanggalLahir || !formData.jenisKelamin)) {\r\n        setMessage({ text: \"Tanggal lahir dan jenis kelamin harus diisi untuk siswa\", type: \"error\" });\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Untuk guru, nomor telepon harus diisi\r\n      if (formData.role === \"2\" && !formData.noTelp) {\r\n        setMessage({ text: \"Nomor telepon harus diisi untuk guru\", type: \"error\" });\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Untuk semua role, password harus diisi\r\n      if (!formData.password) {\r\n        setMessage({ text: \"Password harus diisi\", type: \"error\" });\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      let error;\r\n      const roleName = roleNames[formData.role] || \"pengguna\";      // Buat user berdasarkan role\r\n      if (formData.role === \"4\") {\r\n        // Siswa\r\n        const siswaData = {\r\n          nis: formData.nomorInduk,\r\n          nama: formData.nama,\r\n          id_kelas: parseInt(formData.kelas),\r\n          id_role: parseInt(formData.role),\r\n          password: formData.password,\r\n          tanggal_lahir: formData.tanggalLahir || null,\r\n          alamat: formData.alamat || null,\r\n          Jenis_Kelamin: formData.jenisKelamin === \"P\" ? \"perempuan\" : \"laki\"\r\n          // avatar: formData.avatar || null, \r\n        };\r\n        \r\n        const result = await supabase.from(\"siswa\").insert(siswaData);\r\n        error = result.error;\r\n      } \r\n      else if (formData.role === \"2\") {\r\n        // Guru\r\n        const guruData = {\r\n          nuptk: formData.nomorInduk,\r\n          nama: formData.nama,\r\n          no_telp: formData.noTelp,\r\n          id_role: parseInt(formData.role),\r\n          password: formData.password,\r\n          kelas: parseInt(formData.kelas),\r\n          alamat: formData.alamat || null\r\n        };\r\n        \r\n        const result = await supabase.from(\"guru\").insert(guruData);\r\n        error = result.error;\r\n      } \r\n      else if (formData.role === \"3\") {\r\n        // Orang Tua\r\n        const waliData = {\r\n          nama: formData.nama,\r\n          no_telp: formData.noTelp,\r\n          id_role: parseInt(formData.role),\r\n          password: formData.password,\r\n          alamat: formData.alamat || null\r\n        };\r\n        \r\n        const result = await supabase.from(\"wali\").insert(waliData);\r\n        error = result.error;\r\n      }\r\n\r\n      if (error) throw error;\r\n\r\n      // Pesan sukses menggunakan roleName dari mapping\r\n      setMessage({\r\n        text: `Akun ${roleName} berhasil dibuat untuk ${formData.nama}`,\r\n        type: \"success\",\r\n      });\r\n\r\n      // Reset form after successful submission\r\n      setFormData({\r\n        nama: \"\",\r\n        nomorInduk: \"\",\r\n        role: \"4\", // Reset ke default siswa\r\n        kelas: \"\",\r\n        noTelp: \"\",\r\n        password: \"\",\r\n        tanggalLahir: \"\",\r\n        alamat: \"\",\r\n        jenisKelamin: \"L\",\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error creating user:\", error);\r\n      setMessage({\r\n        text: `Error: ${\r\n          error.message || \"Terjadi kesalahan saat membuat akun\"\r\n        }`,\r\n        type: \"error\",\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container admin-register\">\r\n      <div className=\"login-card\">\r\n        <h2>Admin - Registrasi Pengguna Baru</h2>\r\n\r\n        {message.text && (\r\n          <div className={`message ${message.type}`}>{message.text}</div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"role\">Jenis Pengguna</label>\r\n            <select\r\n              id=\"role\"\r\n              name=\"role\"\r\n              value={formData.role}\r\n              onChange={handleChange}\r\n              required\r\n            >\r\n              <option value=\"4\">Siswa</option>\r\n              <option value=\"2\">Guru</option>\r\n              <option value=\"3\">Orang Tua</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"nama\">Nama Lengkap</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"nama\"\r\n              name=\"nama\"\r\n              value={formData.nama}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>          <div className=\"form-group\">\r\n            <label htmlFor=\"nomorInduk\">\r\n              {formData.role === \"4\" ? \"NIS\" : formData.role === \"2\" ? \"NUPTK\" : \"Nomor Induk\"}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"nomorInduk\"\r\n              name=\"nomorInduk\"\r\n              value={formData.nomorInduk}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {(formData.role === \"2\" || formData.role === \"3\") && (\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"noTelp\">Nomor Telepon</label>\r\n              <input\r\n                type=\"tel\"\r\n                id=\"noTelp\"\r\n                name=\"noTelp\"\r\n                value={formData.noTelp}\r\n                onChange={handleChange}\r\n                required={formData.role === \"2\"} \r\n                placeholder=\"Format: 08xxxxxxxxxx\"\r\n              />\r\n            </div>\r\n          )}          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>          {needsClass(formData.role) && (\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"kelas\">Kelas</label>\r\n              <select\r\n                id=\"kelas\"\r\n                name=\"kelas\"\r\n                value={formData.kelas}\r\n                onChange={handleChange}\r\n                required\r\n              >\r\n                <option value=\"\">Pilih Kelas</option>\r\n                <option value=\"1\">Kelas 1</option>\r\n                <option value=\"2\">Kelas 2</option>\r\n                <option value=\"3\">Kelas 3</option>\r\n                <option value=\"4\">Kelas 4</option>\r\n                <option value=\"5\">Kelas 5</option>\r\n                <option value=\"6\">Kelas 6</option>\r\n              </select>\r\n            </div>\r\n          )}\r\n\r\n          {formData.role === \"4\" && (\r\n            <>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"tanggalLahir\">Tanggal Lahir</label>\r\n                <input\r\n                  type=\"date\"\r\n                  id=\"tanggalLahir\"\r\n                  name=\"tanggalLahir\"\r\n                  value={formData.tanggalLahir}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"jenisKelamin\">Jenis Kelamin</label>\r\n                <select\r\n                  id=\"jenisKelamin\"\r\n                  name=\"jenisKelamin\"\r\n                  value={formData.jenisKelamin}\r\n                  onChange={handleChange}\r\n                  required\r\n                >\r\n                  <option value=\"L\">Laki-laki</option>\r\n                  <option value=\"P\">Perempuan</option>\r\n                </select>\r\n              </div>\r\n            </>\r\n          )}\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"alamat\">Alamat</label>\r\n            <textarea\r\n              id=\"alamat\"\r\n              name=\"alamat\"\r\n              value={formData.alamat}\r\n              onChange={handleChange}\r\n              rows=\"3\"\r\n              required={formData.role === \"4\"}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"login-button\" disabled={loading}>\r\n            {loading ? \"Sedang Memproses...\" : \"Daftarkan Pengguna\"}\r\n          </button>\r\n        </form>\r\n\r\n        <button\r\n          className=\"back-button\"\r\n          onClick={() => navigate(\"/admin/dashboard\")}\r\n        >\r\n          Kembali ke Dashboard Admin\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminRegister;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport supabase from \"../../config/supabase\";\r\nimport \"./admin.css\";\r\n\r\nconst DashboardAdmin = () => {\r\n  const navigate = useNavigate();\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  \r\n  // Add validatePhoneNumber function\r\n  const validatePhoneNumber = (phone) => {\r\n    const phoneRegex = /^[0-9+\\-\\s]{8,20}$/;\r\n    return phoneRegex.test(phone);\r\n  };\r\n\r\n  // Filter function for users based on search term\r\n  const filterUsers = (users) => {\r\n    if (!searchTerm) return users;\r\n    \r\n    return users.filter(user => {\r\n      const searchLower = searchTerm.toLowerCase();\r\n      switch (activeTab) {\r\n        case 'siswa':\r\n          return (\r\n            user.nama?.toLowerCase().includes(searchLower) ||\r\n            user.nis?.toLowerCase().includes(searchLower) ||\r\n            user.alamat?.toLowerCase().includes(searchLower)\r\n          );\r\n        case 'guru':\r\n          return (\r\n            user.nama?.toLowerCase().includes(searchLower) ||\r\n            user.nuptk?.toLowerCase().includes(searchLower) ||\r\n            user.no_telp?.includes(searchTerm) ||\r\n            user.alamat?.toLowerCase().includes(searchLower)\r\n          );\r\n        case 'wali':\r\n          return (\r\n            user.nama?.toLowerCase().includes(searchLower) ||\r\n            user.no_telp?.includes(searchTerm) ||\r\n            user.alamat?.toLowerCase().includes(searchLower)\r\n          );\r\n        case 'admin':\r\n          return (\r\n            user.nama?.toLowerCase().includes(searchLower) ||\r\n            user.tipe_admin?.toLowerCase().includes(searchLower)\r\n          );\r\n        default:\r\n          return false;\r\n      }\r\n    });\r\n  };\r\n\r\n  const [users, setUsers] = useState({\r\n    siswa: [],\r\n    guru: [],\r\n    wali: [],\r\n    admin: []\r\n  });\r\n  const [kelas, setKelas] = useState([]); // Add state for kelas\r\n  const [loading, setLoading] = useState(true);\r\n  const [activeTab, setActiveTab] = useState(\"siswa\");\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    // Common fields\r\n    nama: \"\",\r\n    // Siswa fields\r\n    nis: \"\",\r\n    tanggal_lahir: \"\",\r\n    alamat: \"\",\r\n    id_kelas: \"\",\r\n    id_wali: \"\",\r\n    Jenis_Kelamin: \"\",\r\n    // Guru fields\r\n    nuptk: \"\",\r\n    no_telp: \"\",\r\n    kelas: \"\",\r\n    // Admin fields\r\n    tipe_admin: \"\",\r\n    // Only for new users\r\n    password: \"\",\r\n    auth_user_id: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n    fetchKelas(); // Add kelas fetch on component mount\r\n  }, []);\r\n  // Update fetchUsers to use proper error handling\r\n  const fetchUsers = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Fetch data from individual tables with join for siswa-wali\r\n      const [siswaResult, guruResult, waliResult, adminResult] = await Promise.all([\r\n        supabase\r\n          .from(\"siswa\")\r\n          .select(`\r\n            *,\r\n            wali:id_wali (\r\n              nama\r\n            )\r\n          `),\r\n        supabase.from(\"guru\").select(\"*\"),\r\n        supabase.from(\"wali\").select(\"*\"),\r\n        supabase.from(\"admin\").select(\"*\")\r\n      ]);\r\n\r\n      // Check for errors\r\n      if (siswaResult.error) throw new Error(`Error fetching siswa: ${siswaResult.error.message}`);\r\n      if (guruResult.error) throw new Error(`Error fetching guru: ${guruResult.error.message}`);\r\n      if (waliResult.error) throw new Error(`Error fetching wali: ${waliResult.error.message}`);\r\n      if (adminResult.error) throw new Error(`Error fetching admin: ${adminResult.error.message}`);\r\n\r\n      // Update state with the fetched data\r\n      setUsers({\r\n        siswa: siswaResult.data || [],\r\n        guru: guruResult.data || [],\r\n        wali: waliResult.data || [],\r\n        admin: adminResult.data || []\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n      alert(\"Error fetching users: \" + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Add function to fetch kelas data\r\n  const fetchKelas = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('kelas')\r\n        .select('*')\r\n        .order('nama_kelas', { ascending: true });\r\n\r\n      if (error) throw error;\r\n      setKelas(data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching kelas:', error);\r\n      alert('Error fetching kelas data: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      const { error } = await supabase.auth.signOut();\r\n      if (error) throw error;\r\n\r\n      localStorage.removeItem(\"isLoggedIn\");\r\n      localStorage.removeItem(\"userRole\");\r\n      navigate(\"/login\");\r\n    } catch (error) {\r\n      console.error(\"Error logging out:\", error);\r\n      alert(\"Error logging out. Please try again.\");\r\n    }\r\n  };\r\n  const handleDeleteUser = async (id, role, userData) => {\r\n    let confirmMessage = '';\r\n    \r\n    // Create specific confirmation messages for each user type\r\n    switch (role) {\r\n      case 'siswa':\r\n        confirmMessage = `Apakah Anda yakin ingin menghapus siswa \"${userData.nama}\" dengan NIS ${userData.nis}?\\n\\nPeringatan: Tindakan ini akan menghapus semua data terkait siswa termasuk:\\n- Catatan siswa\\n- Riwayat kemajuan\\n- Nilai-nilai`;\r\n        break;\r\n      case 'guru':\r\n        confirmMessage = `Apakah Anda yakin ingin menghapus guru \"${userData.nama}\" dengan NUPTK ${userData.nuptk}?\\n\\nPeringatan: Tindakan ini akan mempengaruhi data kelas yang diajar oleh guru ini.`;\r\n        break;\r\n      case 'wali':\r\n        confirmMessage = `Apakah Anda yakin ingin menghapus wali murid \"${userData.nama}\"?\\n\\nPeringatan: Pastikan tidak ada siswa yang masih terkait dengan wali ini.`;\r\n        break;\r\n      case 'admin':\r\n        confirmMessage = `Apakah Anda yakin ingin menghapus admin \"${userData.nama}\" (${userData.tipe_admin})?`;\r\n        break;\r\n      default:\r\n        confirmMessage = 'Apakah Anda yakin ingin menghapus pengguna ini?';\r\n    }\r\n\r\n    if (!window.confirm(confirmMessage)) return;\r\n\r\n    try {\r\n      let tableName;\r\n      let idColumn;\r\n      \r\n      // Map role to correct table name and ID column\r\n      if (role === \"siswa\") {\r\n        tableName = \"siswa\";\r\n        idColumn = \"id_siswa\";\r\n        \r\n        // First delete related records in siswa_catatan\r\n        const { error: catatanError } = await supabase\r\n          .from('siswa_catatan')\r\n          .delete()\r\n          .eq('id_siswa', id);\r\n          \r\n        if (catatanError) throw catatanError;\r\n\r\n        // Delete related records in kemajuan\r\n        const { error: kemajuanError } = await supabase\r\n          .from('kemajuan')\r\n          .delete()\r\n          .eq('id_siswa', id);\r\n          \r\n        if (kemajuanError) throw kemajuanError;\r\n\r\n        // Delete related records in nilai\r\n        const { error: nilaiError } = await supabase\r\n          .from('nilai')\r\n          .delete()\r\n          .eq('id_siswa', id);\r\n          \r\n        if (nilaiError) throw nilaiError;\r\n\r\n      } else if (role === \"guru\") {\r\n        tableName = \"guru\";\r\n        idColumn = \"id_guru\";\r\n      } else if (role === \"wali\") {\r\n        tableName = \"wali\";\r\n        idColumn = \"id_wali\";\r\n      } else if (role === \"admin\") {\r\n        tableName = \"admin\";\r\n        idColumn = \"id_admin\";\r\n      } else {\r\n        throw new Error(\"Unknown role\");\r\n      }\r\n      \r\n      // Delete from appropriate table\r\n      const { error } = await supabase\r\n        .from(tableName)\r\n        .delete()\r\n        .eq(idColumn, id);\r\n\r\n      if (error) throw error;\r\n\r\n      // Show success message\r\n      alert(`${role.charAt(0).toUpperCase() + role.slice(1)} berhasil dihapus!`);\r\n\r\n      // Refresh the users list\r\n      fetchUsers();\r\n    } catch (error) {\r\n      console.error(\"Error deleting user:\", error);\r\n      alert(\"Error deleting user: \" + error.message);\r\n    }\r\n  };  const handleCreateUser = async () => {\r\n    try {\r\n      const table = activeTab;\r\n      \r\n      // Validate phone number for guru and wali\r\n      if ((activeTab === 'guru' || activeTab === 'wali') && !validatePhoneNumber(formData.no_telp)) {\r\n        throw new Error('Nomor telepon harus terdiri dari 8-20 karakter dan hanya boleh mengandung angka, tanda plus, strip, dan spasi');\r\n      }\r\n\r\n      let dataToInsert = { ...formData };\r\n      \r\n      // Remove unnecessary fields based on user type\r\n      switch (activeTab) {\r\n        case 'siswa':\r\n          // Keep only siswa-specific fields\r\n          dataToInsert = {\r\n            nama: formData.nama,\r\n            nis: formData.nis,\r\n            tanggal_lahir: formData.tanggal_lahir,\r\n            alamat: formData.alamat,\r\n            id_kelas: parseInt(formData.id_kelas),\r\n            id_wali: parseInt(formData.id_wali),\r\n            Jenis_Kelamin: formData.Jenis_Kelamin,\r\n            id_role: 4 // Set default role for siswa\r\n          };\r\n          break;\r\n        case 'guru':\r\n          // Keep only guru-specific fields\r\n          dataToInsert = {\r\n            nama: formData.nama,\r\n            nuptk: formData.nuptk,\r\n            no_telp: formData.no_telp,\r\n            alamat: formData.alamat,\r\n            kelas: formData.kelas,\r\n            id_role: 2 // Set default role for guru\r\n          };\r\n          break;\r\n        case 'wali':\r\n          // Keep only wali-specific fields\r\n          dataToInsert = {\r\n            nama: formData.nama,\r\n            alamat: formData.alamat,\r\n            no_telp: formData.no_telp,\r\n            id_role: 3 // Set default role for wali\r\n          };\r\n          break;\r\n        case 'admin':\r\n          // Keep only admin-specific fields\r\n          dataToInsert = {\r\n            nama: formData.nama,\r\n            tipe_admin: formData.tipe_admin\r\n          };\r\n          break;\r\n        default:\r\n          throw new Error('Invalid user type');\r\n      }\r\n\r\n      // Check if user with unique fields already exists\r\n      let existingUserQuery = null;\r\n      if (activeTab === 'siswa') {\r\n        existingUserQuery = await supabase\r\n          .from(table)\r\n          .select()\r\n          .eq('nis', formData.nis)\r\n          .single();\r\n      } else if (activeTab === 'guru') {\r\n        existingUserQuery = await supabase\r\n          .from(table)\r\n          .select()\r\n          .eq('nuptk', formData.nuptk)\r\n          .single();\r\n      }\r\n\r\n      if (existingUserQuery?.data) {\r\n        throw new Error(`${activeTab} dengan ${activeTab === 'siswa' ? 'NIS' : 'NUPTK'} tersebut sudah ada`);\r\n      }\r\n\r\n      // Insert new user\r\n      const { data, error } = await supabase\r\n        .from(table)\r\n        .insert([dataToInsert])\r\n        .select();\r\n\r\n      if (error) throw error;\r\n\r\n      setUsers(prev => ({\r\n        ...prev,\r\n        [activeTab]: [...prev[activeTab], data[0]]\r\n      }));\r\n\r\n      setModalOpen(false);\r\n      setFormData(initialFormState);\r\n      alert('Pengguna berhasil ditambahkan!');\r\n      \r\n      // Refresh the users list to get the latest data\r\n      fetchUsers();\r\n    } catch (error) {\r\n      console.error('Error creating user:', error);\r\n      alert('Error creating user: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleUpdateUser = async () => {\r\n    try {\r\n      const table = activeTab;\r\n      let idColumn;\r\n      let dataToUpdate;\r\n\r\n      // Validate phone number for guru and wali\r\n      if ((activeTab === 'guru' || activeTab === 'wali') && !validatePhoneNumber(formData.no_telp)) {\r\n        throw new Error('Nomor telepon harus terdiri dari 8-20 karakter dan hanya boleh mengandung angka, tanda plus, strip, dan spasi');\r\n      }\r\n\r\n      switch (activeTab) {\r\n        case 'siswa':\r\n          idColumn = 'id_siswa';\r\n          dataToUpdate = {\r\n            nama: formData.nama,\r\n            nis: formData.nis,\r\n            tanggal_lahir: formData.tanggal_lahir,\r\n            alamat: formData.alamat,\r\n            id_kelas: parseInt(formData.id_kelas),\r\n            id_wali: parseInt(formData.id_wali),\r\n            Jenis_Kelamin: formData.Jenis_Kelamin\r\n          };\r\n          break;\r\n        case 'guru':\r\n          idColumn = 'id_guru';\r\n          dataToUpdate = {\r\n            nama: formData.nama,\r\n            nuptk: formData.nuptk,\r\n            no_telp: formData.no_telp,\r\n            alamat: formData.alamat,\r\n            kelas: formData.kelas\r\n          };\r\n          break;\r\n        case 'wali':\r\n          idColumn = 'id_wali';\r\n          dataToUpdate = {\r\n            nama: formData.nama,\r\n            alamat: formData.alamat,\r\n            no_telp: formData.no_telp\r\n          };\r\n          break;\r\n        case 'admin':\r\n          idColumn = 'id_admin';\r\n          dataToUpdate = {\r\n            nama: formData.nama,\r\n            tipe_admin: formData.tipe_admin\r\n          };\r\n          break;\r\n        default:\r\n          throw new Error('Invalid user type');\r\n      }\r\n\r\n      const { error } = await supabase\r\n        .from(table)\r\n        .update(dataToUpdate)\r\n        .eq(idColumn, selectedUser[idColumn]);\r\n\r\n      if (error) throw error;\r\n\r\n      setUsers(prev => ({\r\n        ...prev,\r\n        [activeTab]: prev[activeTab].map(user => \r\n          user[idColumn] === selectedUser[idColumn] ? { ...user, ...dataToUpdate } : user\r\n        )\r\n      }));\r\n\r\n      setModalOpen(false);\r\n      setEditMode(false);\r\n      setSelectedUser(null);\r\n      setFormData(initialFormState);\r\n      alert('Pengguna berhasil diperbarui!');\r\n      \r\n      // Refresh the users list to get the latest data\r\n      fetchUsers();\r\n    } catch (error) {\r\n      console.error('Error updating user:', error);\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  const handleEditUser = (user) => {\r\n    setSelectedUser(user);\r\n    setFormData({\r\n      ...user,\r\n      // For siswa, ensure id_wali and id_kelas are strings for form inputs\r\n      id_wali: user.id_wali ? user.id_wali.toString() : '',\r\n      id_kelas: user.id_kelas ? user.id_kelas.toString() : '',\r\n      // Keep other fields\r\n      nama: user.nama || '',\r\n      nis: user.nis || '',\r\n      nuptk: user.nuptk || '',\r\n      tanggal_lahir: user.tanggal_lahir || '',\r\n      Jenis_Kelamin: user.Jenis_Kelamin || '',\r\n      alamat: user.alamat || '',\r\n      no_telp: user.no_telp || '',\r\n      kelas: user.kelas || '',\r\n      tipe_admin: user.tipe_admin || ''\r\n    });\r\n    setEditMode(true);\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const initialFormState = {\r\n    // Common fields\r\n    nama: \"\",\r\n    // Siswa fields\r\n    nis: \"\",\r\n    tanggal_lahir: \"\",\r\n    alamat: \"\",\r\n    id_kelas: \"\",\r\n    id_wali: \"\",\r\n    Jenis_Kelamin: \"\",\r\n    // Guru fields\r\n    nuptk: \"\",\r\n    no_telp: \"\",\r\n    kelas: \"\",\r\n    // Admin fields\r\n    tipe_admin: \"\",\r\n    // Only for new users\r\n    password: \"\",\r\n    auth_user_id: null\r\n  };\r\n\r\n  const renderModal = () => (\r\n    <div className={`modal ${modalOpen ? 'show' : ''}`}>\r\n      <div className=\"modal-content\">\r\n        <h2>{editMode ? 'Edit' : 'Tambah'} {activeTab}</h2>\r\n        <form onSubmit={(e) => {\r\n          e.preventDefault();\r\n          editMode ? handleUpdateUser() : handleCreateUser();\r\n        }}>\r\n          {/* Common field for all types: nama */}\r\n          <div className=\"form-group\">\r\n            <label>Nama:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.nama}\r\n              onChange={(e) => setFormData({ ...formData, nama: e.target.value })}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Fields specific to siswa */}\r\n          {activeTab === 'siswa' && (\r\n            <>\r\n              <div className=\"form-group\">\r\n                <label>NIS:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.nis}\r\n                  onChange={(e) => setFormData({ ...formData, nis: e.target.value })}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Tanggal Lahir:</label>\r\n                <input\r\n                  type=\"date\"\r\n                  value={formData.tanggal_lahir}\r\n                  onChange={(e) => setFormData({ ...formData, tanggal_lahir: e.target.value })}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Alamat:</label>\r\n                <textarea\r\n                  value={formData.alamat}\r\n                  onChange={(e) => setFormData({ ...formData, alamat: e.target.value })}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Kelas:</label>\r\n                <select\r\n                  value={formData.id_kelas}\r\n                  onChange={(e) => setFormData({ ...formData, id_kelas: e.target.value })}\r\n                  required\r\n                >\r\n                  <option value=\"\">Pilih Kelas</option>\r\n                  {kelas.map((k) => (\r\n                    <option key={k.id_kelas} value={k.id_kelas}>\r\n                      {k.nama_kelas}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Wali:</label>\r\n                <select\r\n                  value={formData.id_wali}\r\n                  onChange={(e) => setFormData({ ...formData, id_wali: e.target.value })}\r\n                  required\r\n                >\r\n                  <option value=\"\">Pilih Wali</option>\r\n                  {users.wali.map((wali) => (\r\n                    <option key={wali.id_wali} value={wali.id_wali}>\r\n                      {wali.nama}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Jenis Kelamin:</label>\r\n                <select\r\n                  value={formData.Jenis_Kelamin}\r\n                  onChange={(e) => setFormData({ ...formData, Jenis_Kelamin: e.target.value })}\r\n                  required\r\n                >\r\n                  <option value=\"\">Pilih Jenis Kelamin</option>\r\n                  <option value=\"L\">Laki-laki</option>\r\n                  <option value=\"P\">Perempuan</option>\r\n                </select>\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          {/* Fields specific to guru */}\r\n          {activeTab === 'guru' && (\r\n            <>\r\n              <div className=\"form-group\">\r\n                <label>NUPTK:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.nuptk}\r\n                  onChange={(e) => setFormData({ ...formData, nuptk: e.target.value })}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>No. Telepon:</label>\r\n                <input\r\n                  type=\"tel\"\r\n                  value={formData.no_telp}\r\n                  onChange={(e) => setFormData({ ...formData, no_telp: e.target.value })}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Alamat:</label>\r\n                <textarea\r\n                  value={formData.alamat}\r\n                  onChange={(e) => setFormData({ ...formData, alamat: e.target.value })}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Kelas:</label>\r\n                <select\r\n                  value={formData.kelas}\r\n                  onChange={(e) => setFormData({ ...formData, kelas: e.target.value })}\r\n                  required\r\n                >\r\n                  <option value=\"\">Pilih Kelas</option>\r\n                  {kelas.map((k) => (\r\n                    <option key={k.id_kelas} value={k.nama_kelas}>\r\n                      {k.nama_kelas}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          {/* Fields specific to wali */}\r\n          {activeTab === 'wali' && (\r\n            <>\r\n              <div className=\"form-group\">\r\n                <label>No. Telepon:</label>\r\n                <input\r\n                  type=\"tel\"\r\n                  value={formData.no_telp}\r\n                  onChange={(e) => setFormData({ ...formData, no_telp: e.target.value })}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Alamat:</label>\r\n                <textarea\r\n                  value={formData.alamat}\r\n                  onChange={(e) => setFormData({ ...formData, alamat: e.target.value })}\r\n                  required\r\n                />\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          {/* Fields specific to admin */}\r\n          {activeTab === 'admin' && (\r\n            <>\r\n              <div className=\"form-group\">\r\n                <label>Tipe Admin:</label>\r\n                <select\r\n                  value={formData.tipe_admin}\r\n                  onChange={(e) => setFormData({ ...formData, tipe_admin: e.target.value })}\r\n                  required\r\n                >\r\n                  <option value=\"\">Pilih Tipe Admin</option>\r\n                  <option value=\"super\">Super Admin</option>\r\n                  <option value=\"regular\">Regular Admin</option>\r\n                </select>\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          {/* Common field for auth_user_id and password (only for new users) */}\r\n          {!editMode && (\r\n            <div className=\"form-group\">\r\n              <label>Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                value={formData.password}\r\n                onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n                required\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"modal-actions\">\r\n            <button type=\"submit\">{editMode ? 'Update' : 'Simpan'}</button>\r\n            <button type=\"button\" onClick={() => {\r\n              setModalOpen(false);\r\n              setEditMode(false);\r\n              setSelectedUser(null);\r\n              setFormData(initialFormState);\r\n            }}>Batal</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderUserTable = () => {\r\n    const currentUsers = users[activeTab] || [];\r\n    const filteredUsers = filterUsers(currentUsers);\r\n\r\n    if (loading) {\r\n      return <div className=\"loading\">\r\n        <i className=\"fas fa-spinner\"></i> Loading users...\r\n      </div>;\r\n    }\r\n\r\n    const renderTableContent = () => {\r\n      switch (activeTab) {\r\n        case 'siswa':\r\n          return (\r\n            <table className=\"user-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>NIS</th>\r\n                  <th>Nama</th>\r\n                  <th>Tanggal Lahir</th>\r\n                  <th>Alamat</th>\r\n                  <th>Kelas</th>\r\n                  <th>Wali</th>\r\n                  <th>Jenis Kelamin</th>\r\n                  <th>Avatar</th>\r\n                  <th>Created At</th>\r\n                  <th>Updated At</th>\r\n                  <th>Aksi</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredUsers.map((user) => (\r\n                  <tr key={user.id_siswa}>\r\n                    <td>{user.nis}</td>\r\n                    <td>{user.nama}</td>\r\n                    <td>{user.tanggal_lahir}</td>\r\n                    <td>{user.alamat}</td>\r\n                    <td>{kelas.find(k => k.id_kelas === user.id_kelas)?.nama_kelas || '-'}</td>\r\n                    <td>{user.wali?.nama || '-'}</td>\r\n                    <td>{user.Jenis_Kelamin}</td>\r\n                    <td>{user.avatar ? '✓' : '✗'}</td>\r\n                    <td>{new Date(user.created_at).toLocaleDateString()}</td>\r\n                    <td>{new Date(user.updated_at).toLocaleDateString()}</td>\r\n                    <td>\r\n                      <button className=\"edit-button\" onClick={() => handleEditUser(user)}>\r\n                        <i className=\"fas fa-edit mr-2\"></i>\r\n                        Edit\r\n                      </button>\r\n                      <button className=\"delete-button\" onClick={() => handleDeleteUser(user.id_siswa, 'siswa', user)}>\r\n                        <i className=\"fas fa-trash-alt mr-2\"></i>\r\n                        Hapus\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          );\r\n        case 'guru':\r\n          return (\r\n            <table className=\"user-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>NUPTK</th>\r\n                  <th>Nama</th>\r\n                  <th>No. Telepon</th>\r\n                  <th>Alamat</th>\r\n                  <th>Kelas</th>\r\n                  <th>Created At</th>\r\n                  <th>Updated At</th>\r\n                  <th>Aksi</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredUsers.map((user) => (\r\n                  <tr key={user.id_guru}>\r\n                    <td>{user.nuptk}</td>\r\n                    <td>{user.nama}</td>\r\n                    <td>{user.no_telp}</td>\r\n                    <td>{user.alamat}</td>\r\n                    <td>{user.kelas}</td>\r\n                    <td>{new Date(user.created_at).toLocaleDateString()}</td>\r\n                    <td>{new Date(user.updated_at).toLocaleDateString()}</td>\r\n                    <td>\r\n                      <button className=\"edit-button\" onClick={() => handleEditUser(user)}>\r\n                        <i className=\"fas fa-edit mr-2\"></i>\r\n                        Edit\r\n                      </button>\r\n                      <button className=\"delete-button\" onClick={() => handleDeleteUser(user.id_guru, 'guru', user)}>\r\n                        <i className=\"fas fa-trash-alt mr-2\"></i>\r\n                        Hapus\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          );\r\n        case 'wali':\r\n          return (\r\n            <table className=\"user-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Nama</th>\r\n                  <th>Alamat</th>\r\n                  <th>No. Telepon</th>\r\n                  <th>Created At</th>\r\n                  <th>Updated At</th>\r\n                  <th>Aksi</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredUsers.map((user) => (\r\n                  <tr key={user.id_wali}>\r\n                    <td>{user.nama}</td>\r\n                    <td>{user.alamat}</td>\r\n                    <td>{user.no_telp}</td>\r\n                    <td>{new Date(user.created_at).toLocaleDateString()}</td>\r\n                    <td>{new Date(user.updated_at).toLocaleDateString()}</td>\r\n                    <td>\r\n                      <button className=\"edit-button\" onClick={() => handleEditUser(user)}>\r\n                        <i className=\"fas fa-edit mr-2\"></i>\r\n                        Edit\r\n                      </button>\r\n                      <button className=\"delete-button\" onClick={() => handleDeleteUser(user.id_wali, 'wali', user)}>\r\n                        <i className=\"fas fa-trash-alt mr-2\"></i>\r\n                        Hapus\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          );\r\n        case 'admin':\r\n          return (\r\n            <table className=\"user-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Nama</th>\r\n                  <th>Tipe Admin</th>\r\n                  <th>Created At</th>\r\n                  <th>Aksi</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredUsers.map((user) => (\r\n                  <tr key={user.id_admin}>\r\n                    <td>{user.nama}</td>\r\n                    <td>{user.tipe_admin}</td>\r\n                    <td>{new Date(user.created_at).toLocaleDateString()}</td>\r\n                    <td>\r\n                      <button className=\"edit-button\" onClick={() => handleEditUser(user)}>\r\n                        <i className=\"fas fa-edit mr-2\"></i>\r\n                        Edit\r\n                      </button>\r\n                      <button className=\"delete-button\" onClick={() => handleDeleteUser(user.id_admin, 'admin', user)}>\r\n                        <i className=\"fas fa-trash-alt mr-2\"></i>\r\n                        Hapus\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          );\r\n        default:\r\n          return <div className=\"no-users\">Tab tidak valid</div>;\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"users-container\">\r\n        <div className=\"search-filter\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-input\"\r\n            placeholder={`Cari ${activeTab} berdasarkan nama, ${\r\n              activeTab === 'siswa' ? 'NIS, atau alamat' :\r\n              activeTab === 'guru' ? 'NUPTK, nomor telepon, atau alamat' :\r\n              activeTab === 'wali' ? 'nomor telepon atau alamat' :\r\n              'tipe admin'\r\n            }...`}\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"table-actions\">\r\n          <button onClick={() => {\r\n            setEditMode(false);\r\n            setSelectedUser(null);\r\n            setFormData(initialFormState);\r\n            setModalOpen(true);\r\n          }}>\r\n            <i className=\"fas fa-plus-circle mr-2\"></i>\r\n            Tambah {activeTab}\r\n          </button>\r\n        </div>\r\n        {filteredUsers.length === 0 ? (\r\n          <div className=\"no-users\">\r\n            Tidak ada pengguna {activeTab} yang ditemukan.\r\n          </div>\r\n        ) : (\r\n          <div className=\"table-wrapper\">\r\n            {renderTableContent()}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <div className=\"dashboard-container\">\r\n        <h1>Dashboard Admin</h1>\r\n\r\n        <div className=\"admin-actions\">\r\n          <button className=\"logout-button\" onClick={handleLogout}>\r\n            <i className=\"fas fa-sign-out-alt\"></i>\r\n            Logout\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"tabs\">\r\n          <button\r\n            className={`tab ${activeTab === \"siswa\" ? \"active\" : \"\"}`}\r\n            onClick={() => setActiveTab(\"siswa\")}\r\n          >\r\n            <i className=\"fas fa-user-graduate mr-2\"></i>\r\n            Siswa ({users.siswa.length})\r\n          </button>\r\n          <button\r\n            className={`tab ${activeTab === \"guru\" ? \"active\" : \"\"}`}\r\n            onClick={() => setActiveTab(\"guru\")}\r\n          >\r\n            <i className=\"fas fa-chalkboard-teacher mr-2\"></i>\r\n            Guru ({users.guru.length})\r\n          </button>\r\n          <button\r\n            className={`tab ${activeTab === \"wali\" ? \"active\" : \"\"}`}\r\n            onClick={() => setActiveTab(\"wali\")}\r\n          >\r\n            <i className=\"fas fa-users mr-2\"></i>\r\n            Orang Tua ({users.wali.length})\r\n          </button>\r\n          <button\r\n            className={`tab ${activeTab === \"admin\" ? \"active\" : \"\"}`}\r\n            onClick={() => setActiveTab(\"admin\")}\r\n          >\r\n            <i className=\"fas fa-user-shield mr-2\"></i>\r\n            Admin ({users.admin?.length || 0})\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"users-container\">\r\n          {renderUserTable()}\r\n        </div>\r\n      </div>\r\n      {renderModal()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardAdmin;\r\n"],"names":["supabaseUrl","supabaseKey","connectionStatus","createDummyClient","table","columns","column","value","num","data","func","params","createSafeClient","client","createClient","fixedClient","testTable","fixError","testQuery","fromError","enhancedClient","error","timeout","startTime","timeoutPromise","_","reject","sessionPromise","responseTime","operation","maxRetries","delay","retries","resolve","err","supabase","AdminRegister","navigate","useNavigate","formData","setFormData","useState","loading","setLoading","message","setMessage","roleNames","needsClass","role","handleChange","e","name","handleSubmit","roleText","roleName","siswaData","guruData","waliData","jsxs","jsx","Fragment","DashboardAdmin","searchTerm","setSearchTerm","validatePhoneNumber","phone","filterUsers","users","user","searchLower","activeTab","_a","_b","_c","_d","_e","_f","_g","_h","_i","_j","_k","_l","setUsers","kelas","setKelas","setActiveTab","modalOpen","setModalOpen","editMode","setEditMode","selectedUser","setSelectedUser","useEffect","fetchUsers","fetchKelas","siswaResult","guruResult","waliResult","adminResult","handleLogout","handleDeleteUser","id","userData","confirmMessage","tableName","idColumn","catatanError","kemajuanError","nilaiError","handleCreateUser","dataToInsert","existingUserQuery","prev","initialFormState","handleUpdateUser","dataToUpdate","handleEditUser","renderModal","k","wali","renderUserTable","currentUsers","filteredUsers","renderTableContent"],"mappings":"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"}